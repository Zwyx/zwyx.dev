"use strict";(self.webpackChunkzwyx_dev=self.webpackChunkzwyx_dev||[]).push([[9538],{3960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>h});var i=n(2730),s=n(4848),a=n(8453);const o={tags:["git"]},r=void 0,c={authorsImageUrls:[]},h=[];function l(e){const t={a:"a",code:"code",em:"em",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Git has ",(0,s.jsx)(t.a,{href:"https://git-scm.com/book/en/v2/Git-Basics-Tagging",children:"two kinds of tags"}),": ",(0,s.jsx)(t.em,{children:"annotated"})," and ",(0,s.jsx)(t.em,{children:"lightweight"}),"."]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["An annotated tag is stored as an object. It contains the name of the user who created it (the ",(0,s.jsx)(t.em,{children:"tagger"}),"), it can be signed, etc."]}),"\n",(0,s.jsx)(t.li,{children:"A lightweight tag is like a branch that doesn't change."}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Although using one kind or the other doesn't change anything most of the times, there are cases where knowing the difference is useful. GitHub Actions for instance, has a different behaviour for the two: when we push a ",(0,s.jsx)(t.strong,{children:"lightweight"})," tag which is on the latest commit of branch ",(0,s.jsx)(t.code,{children:"main"}),", ",(0,s.jsx)(t.code,{children:"github.event.base_ref"})," contains ",(0,s.jsx)(t.code,{children:"refs/heads/main"}),". This allows us to run a workflow on new tags only created on the main branch:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"on:\n  push:\n    tags:\n      - \"v[0-9]+.[0-9]+.[0-9]+\"\n\njobs:\n  build-website:\n    if: github.event.base_ref == 'refs/heads/main'\n    ...\n"})}),"\n",(0,s.jsxs)(t.p,{children:["However, ",(0,s.jsx)(t.strong,{children:"this doesn't work if the tag is annotated"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Commands like ",(0,s.jsx)(t.code,{children:"npm version"})," create annotated tags, so we can just add a ",(0,s.jsx)(t.code,{children:"postversion"})," script in ",(0,s.jsx)(t.code,{children:"package.json"})," to convert the newly created annotated tag to a lightweight one:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'tag=$(git tag --points-at HEAD)\n\ngit tag -d "$tag"\ngit tag "$tag" HEAD\n'})}),"\n",(0,s.jsxs)(t.p,{children:["See the whole files at ",(0,s.jsx)(t.a,{href:"https://github.com/Zwyx/library-of-babel",children:"github.com/Zwyx/library-of-babel"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}},2730:e=>{e.exports=JSON.parse('{"permalink":"/til/2025/01/24/Annotated and lightweight tags","editUrl":"https://github.com/zwyx/zwyx.dev/tree/master/til/2025-01-24-Annotated and lightweight tags.md","source":"@site/til/2025-01-24-Annotated and lightweight tags.md","title":"Annotated and lightweight tags","description":"Git has two kinds of tags: annotated and lightweight.","date":"2025-01-24T00:00:00.000Z","tags":[{"inline":true,"label":"git","permalink":"/til/tags/git"}],"hasTruncateMarker":false,"authors":[],"frontMatter":{"tags":["git"]},"unlisted":false,"prevItem":{"title":"DDC/CI","permalink":"/til/2025/02/05/ddc-ci"},"nextItem":{"title":"interactive-widget","permalink":"/til/2024/03/27/interactive-widget"}}')}}]);